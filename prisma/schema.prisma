generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Utilizador {
  id                  String            @id @db.VarChar(36)
  nome                String            @db.VarChar(255)
  email               String            @unique @db.VarChar(255)
  palavra_passe       String            @db.VarChar(255)
  dataCadastro        DateTime          @default(now())
  grupo               GrupoUtilizadores @relation(fields: [grupoUtilizadoresId], references: [id])
  grupoUtilizadoresId String
  Perfil              Perfil?
  documento           Documento[]
  auditoria           Auditoria[]
}

model Perfil {
  id           String     @id @db.VarChar(36)
  image_url    String     @default("/") @db.VarChar(255)
  bio          String?    @db.Text
  genero       Genero
  utilizador   Utilizador @relation(fields: [utilizadorId], references: [id])
  utilizadorId String     @unique
  telefone     Telefone?
}

model GrupoUtilizadores {
  id         String       @id @db.VarChar(36)
  nome       String       @db.VarChar(255)
  descricao  String       @db.Text
  utilizador Utilizador[]
  permissoes Permissoes[]
}

model Permissoes {
  id                  String            @id @db.VarChar(36)
  nivel               String            @db.VarChar(255)
  recurso             String            @db.VarChar(255)
  grupo               GrupoUtilizadores @relation(fields: [grupoUtilizadoresId], references: [id])
  grupoUtilizadoresId String
}

model Documento {
  id               String    @id @db.VarChar(36)
  titulo           String    @db.VarChar(255)
  conteudo         String    @db.Text
  Categoria        Categoria
  status           String    @default("Pendente")
  image_url        String    @default("/") @db.VarChar(255)
  dataCriacao      DateTime  @default(now())
  dataActualizacao DateTime  @updatedAt

  Departamento   Departamento? @relation(fields: [departamentoId], references: [id])
  departamentoId String?       @db.VarChar(36)
  Utilizador     Utilizador?   @relation(fields: [utilizadorId], references: [id])
  utilizadorId   String?       @db.VarChar(36)
  Auditoria      Auditoria[]
}

model Telefone {
  id             String @id @db.VarChar(36)
  numeroTelefone String @unique @db.VarChar(255)
  perfil         Perfil @relation(fields: [perfilId], references: [id])
  perfilId       String @unique
}

model Departamento {
  id        String      @id @db.VarChar(36)
  nome      String      @unique @db.VarChar(255)
  descricao String      @db.Text
  Documento Documento[]
}

model Auditoria {
  id           String      @id @db.VarChar(36)
  alteracao    String      @db.Text
  data         DateTime    @default(now())
  Documento    Documento?  @relation(fields: [documentoId], references: [id])
  documentoId  String?     @db.VarChar(36)
  Utilizador   Utilizador? @relation(fields: [utilizadorId], references: [id])
  utilizadorId String?     @db.VarChar(36)
}

enum Genero {
  Masculino
  Feminino
  Outro
}

enum Categoria {
  Atas
  Cartas
  Decretos
  Folhetos
  Fotografias
  Memorandos
  Oficios
  Plantas
  Relatorios
}
