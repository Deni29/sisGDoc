generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Utilizador {
  id                  String                @id @db.VarChar(36)
  nome                String                @db.VarChar(255)
  email               String                @unique @db.VarChar(255)
  palavra_passe       String                @db.VarChar(255)
  dataCadastro        DateTime              @default(now())
  grupo               GrupoUtilizadores     @relation(fields: [grupoUtilizadoresId], references: [id])
  grupoUtilizadoresId String
  Perfil              Perfil?
  Documento           UtilizadorDocumento[]
}

model Perfil {
  id           String     @id @db.VarChar(36)
  image_url    String     @default("/") @db.VarChar(255)
  bio          String?    @db.Text
  genero       Genero     @relation(fields: [generoId], references: [id])
  generoId     String
  utilizador   Utilizador @relation(fields: [utilizadorId], references: [id])
  utilizadorId String     @unique
  telefone     Telefone?
}

model GrupoUtilizadores {
  id         String       @id @db.VarChar(36)
  nome       String       @unique @db.VarChar(255)
  descricao  String       @db.Text
  Utilizador Utilizador[]
  Permissoes Permissoes[]
}

model Permissoes {
  id                  String            @id @db.VarChar(36)
  nivel               String            @db.VarChar(255)
  recurso             String            @db.VarChar(255)
  grupo               GrupoUtilizadores @relation(fields: [grupoUtilizadoresId], references: [id])
  grupoUtilizadoresId String
}

model Categoria {
  id         String      @id @db.VarChar(36)
  nome       String      @unique @db.VarChar(255)
  documentos Documento[]
}

model Documento {
  id               String    @id @db.VarChar(36)
  titulo           String    @unique @db.VarChar(255)
  conteudo         String    @db.Text
  Categoria        Categoria @relation(fields: [categoriaId], references: [id])
  categoriaId      String
  Estado           Estado    @relation(fields: [estadoId], references: [id])
  estadoId         String    @default("Pendente")
  image_url        String    @default("/") @db.VarChar(255)
  dataCriacao      DateTime  @default(now())
  dataActualizacao DateTime  @updatedAt

  departamento Departamento[]
  Auditoria    Auditoria[]
  Utilizador   UtilizadorDocumento[]
}

model Telefone {
  id             String @id @db.VarChar(36)
  numeroTelefone String @unique @db.VarChar(255)
  Perfil         Perfil @relation(fields: [PerfilId], references: [id])
  PerfilId       String @unique
}

model Estado {
  id        String      @id @db.VarChar(36)
  descricao String      @db.VarChar(255)
  Documento Documento[]
}

model Genero {
  id          String   @id @db.VarChar(36)
  denominacao String   @unique @db.VarChar(255)
  Perfil      Perfil[]
}

model Departamento {
  id        String      @id @db.VarChar(36)
  nome      String      @unique @db.VarChar(255)
  descricao String      @db.Text
  Documento Documento[]
}

model Auditoria {
  id        String      @id @db.VarChar(36)
  alteracao String      @db.Text
  data      DateTime    @default(now())
  Documento Documento[]
}

model UtilizadorDocumento {
  id             String     @id @db.VarChar(36)
  dataAtribuicao DateTime   @default(now())
  utilizador     Utilizador @relation(fields: [utilizadorId], references: [id])
  utilizadorId   String
  documento      Documento  @relation(fields: [documentoId], references: [id])
  documentoId    String
}
